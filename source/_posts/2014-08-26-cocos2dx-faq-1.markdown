---
layout: post
title: "Cocos2dx-FAQ-1"
date: 2014-08-26 17:28
comments: true
categories: Cocos2dx-FAQ
tags: 
---

###1. `Q:`如何在安卓上给应用程序设置透明背景？

NativeActivity，以Cocos2d-x 3.0 rc0为例

[http://www.cocoachina.com/bbs/read.php?tid=196780](http://www.cocoachina.com/bbs/read.php?tid=196780)

JavaActivity，以Cocos2d-x 3.2 release为例

[http://www.cocoachina.com/bbs/read.php?tid=224544](http://www.cocoachina.com/bbs/read.php?tid=224544)

<!-- more -->

<br></br>

###2. `Q:`SimpleAudioEngine在Windows平台上卡顿严重，无法调节音量？

SimpleAudioEngine是分平台实现的，Windows平台上部分API是空实现（比如preloadBackgroundMusic等等）,所以在Windows平台上并不提供预加载，调节音量等功能（参见[cocos/audio/win32/SimpleAudioEngine.cpp](https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/audio/win32/SimpleAudioEngine.cpp)），移植到Android/iOS/Mac上就正常了。Windows上调节音量有网友提供了解决方案。

参考链接：[http://www.cocoachina.com/bbs/read.php?tid=213345](http://www.cocoachina.com/bbs/read.php?tid=213345)

<br></br>

###3. `Q:`Cocos2d-x 3.x无法重写Node::draw()方法？

Cocos2d-x 从v3.0开始将Node::draw()方法标记为final（参见[cocos2d/2d/CCNode.h](https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/2d/CCNode.h)），引擎另外提供了
    
``` cpp draw函数
	
	virtual void draw(Renderer *renderer, const Mat4& transform, uint32_t flags);
	
```

函数，可以通过重写这个函数来绘制你自己的节点，需注意的是如果更改了任何的GL状态，在使用完后必须还原。

参考链接：[http://www.cocoachina.com/bbs/read.php?tid=200176](http://www.cocoachina.com/bbs/read.php?tid=200176)

<br></br>

###4. `Q:`使用ClippingNode，为什么在Android/iOS裁剪显示错误，或者背景变为绿色？

未开启OpenGL深度缓存，解决方法如下：

*iOS：在AppController.mm修改*

``` objc iOS修改深度缓存
	
	EAGLView *__glView = [EAGLView viewWithFrame: [window bounds]
                                     pixelFormat: kEAGLColorFormatRGBA8
                                     depthFormat: GL_DEPTH24_STENCIL8_OES
                              preserveBackbuffer: NO
                                      sharegroup: nil
                                   multiSampling: NO
                                 numberOfSamples: 0];
    
```
                                 
*Android：在AppActivity.java修改*

``` java Android修改深度缓存
	
	public class AppActivity extends Cocos2dxActivity {
     
    public Cocos2dxGLSurfaceView onCreateView() {
        Cocos2dxGLSurfaceView glSurfaceView = new Cocos2dxGLSurfaceView(this);
        // TestCpp should create stencil buffer
           glSurfaceView.setEGLConfigChooser(5, 6, 5, 0, 16, 8);
         
        return glSurfaceView;
    }
	}
	
```

<br></br>

###5.`Q:`如何在Cocos2d-x实现C++调用Java？

<br></br>

###6.`Q:`如何在Cocos2d-x实现Java调用C++？

<br></br>

###7.`Q:`如何在Cocos2d-x实现截图功能？

*Cocos2d-x 2.x*

Cocos2d-x 2.x没有提供截图功能，但是可以用CCRenderTexture来实现这个功能

``` cpp SaveScreenShot

	void CTestLayer::SaveScreenShot()  
	{  
    	//获取屏幕尺寸  
    	CCSize size = CCDirector::sharedDirector()->getWinSize();  
    	//使用屏幕尺寸初始化一个空的渲染纹理对象  
    	CCRenderTexture* texture = CCRenderTexture::create((int)size.width, (int)size.height);  
    	//设置位置      
    	texture->setPosition(ccp(size.width/2, size.height/2));  
    	//开始获取      
    	texture->begin();  
    	//遍历场景节点对象，填充纹理到texure中  
    	CCDirector::sharedDirector()->getRunningScene()->visit();  
    	//结束获取  
    	texture->end();  
    	//保存为PNG图，Win32/Debug目录下  
    	texture->saveToFile("screenshot.png", kCCImageFormatPNG);  
	}  
```

*Cocos2d-x 3.x*

在Cocos2d-x 3.2之前，引擎也没有提供截图功能，同样可以使用RenderTexture实现

``` cpp SaveScreenShot

	void Director::saveScreenshot(const std::string& fileName,const std::function<void(const std::string&)>& callback)  
	{  
    	Image::Format format;  
    	//进行后缀判断  
    	if(std::string::npos != fileName.find_last_of(".")){  
        auto extension = fileName.substr(fileName.find_last_of("."),fileName.length());  
        if (!extension.compare(".png")) {  
            format = Image::Format::PNG;  
        } else if(!extension.compare(".jpg")) {  
            format = Image::Format::JPG;  
        } else{  
            log("cocos2d: the image can only be saved as JPG or PNG format");  
            return;  
        }  
    } else {  
        log("cocos2d: the image can only be saved as JPG or PNG format");  
        return ;  
    }  
    //获取屏幕尺寸，初始化一个空的渲染纹理对象  
    	auto renderTexture = RenderTexture::create(getWinSize().width, getWinSize().height, Texture2D::PixelFormat::RGBA8888);  
    	//清空并开始获取  
    	renderTexture->beginWithClear(0.0f, 0.0f, 0.0f, 0.0f);  
    	//遍历场景节点对象，填充纹理到RenderTexture中  
    	getRunningScene()->visit();  
    	//结束获取  
    	renderTexture->end();  
    	//保存文件  
    	renderTexture->saveToFile(fileName , format);  
    	//使用schedule在下一帧中调用callback函数  
    	auto fullPath = FileUtils::getInstance()->getWritablePath() + fileName;  
    	auto scheduleCallback = [&,fullPath,callback](float dt){  
        	callback(fullPath);  
    	};  
    	auto _schedule = getRunningScene()->getScheduler();  
    	_schedule->schedule(scheduleCallback, this, 0.0f,0,0.0f, false, "screenshot");  
	}

```

从Cocos2d-x 3.2之后开始，引擎提供了captureScreen函数来实现截图功能

``` cpp captureScreen

	void Util::captureScreen(const std::function<void(bool, const std::string&)>& afterCaptured, const std::string& filename);

```

<br></br>

###8.`Q:`如何在Cocos2d-x获取随机数？

<br></br>